# Environment Variables

Copy this file to `.env` and fill in your actual values:

```bash
# Database
DATABASE_URL=postgresql://username:password@localhost:5432/auraos

# AI APIs
OPENAI_API_KEY=your_openai_api_key_here
GOOGLE_GEMINI_API_KEY=your_gemini_api_key_here

# Telegram Bot
TELEGRAM_BOT_TOKEN=your_telegram_bot_token_here

# Firebase Configuration
VITE_FIREBASE_API_KEY=your_firebase_api_key
VITE_FIREBASE_AUTH_DOMAIN=your_project.firebaseapp.com
VITE_FIREBASE_PROJECT_ID=your_project_id
VITE_FIREBASE_STORAGE_BUCKET=your_project.appspot.com
VITE_FIREBASE_MESSAGING_SENDER_ID=your_sender_id
VITE_FIREBASE_APP_ID=your_app_id

# Server Configuration
PORT=5000
NODE_ENV=development

# Learning Loop
ENABLE_CONTINUOUS_LEARNING=true
LEARNING_LOOP_INTERVAL_MS=30000
LEARNING_LOOP_USER_SAMPLE=demo-user
```

## Getting API Keys

### OpenAI API Key
1. Go to https://platform.openai.com/
2. Sign up or log in
3. Navigate to API Keys section
4. Create a new API key
5. Copy the key to your `.env` file

### Google Gemini API Key
1. Go to https://makersuite.google.com/
2. Sign in with your Google account
3. Create a new API key
4. Copy the key to your `.env` file

### Telegram Bot Token
1. Message @BotFather on Telegram
2. Use `/newbot` command
3. Follow the instructions to create your bot
4. Copy the token to your `.env` file

### PostgreSQL Database
You can use:
- Local PostgreSQL installation
- Cloud providers like Neon, Supabase, or AWS RDS
- Docker container: `docker run --name postgres -e POSTGRES_PASSWORD=password -p 5432:5432 -d postgres`


# Monorepo Notes
# This repository uses npm workspaces (apps/*, packages/*, services/*).
# Use the root .env for shared variables. Frontend apps may require VITE_ prefixes.
# Do not commit real secrets. Keep env.example placeholders only.
