var K=i=>{throw TypeError(i)};var C=(i,t,s)=>t.has(i)||K("Cannot "+s);var e=(i,t,s)=>(C(i,t,"read from private field"),s?s.call(i):t.get(i)),d=(i,t,s)=>t.has(i)?K("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(i):t.set(i,s),p=(i,t,s,r)=>(C(i,t,"write to private field"),r?r.call(i,s):t.set(i,s),s),m=(i,t,s)=>(C(i,t,"access private method"),s);import{T as k,U as q,W as R,Y as L,Z as U,b as T,r as f,_ as j,$ as A}from"./index-x6ttPYJB.js";var h,l,o,n,u,g,E,w,D=(w=class extends k{constructor(t,s){super();d(this,u);d(this,h);d(this,l);d(this,o);d(this,n);p(this,h,t),this.setOptions(s),this.bindMethods(),m(this,u,g).call(this)}bindMethods(){this.mutate=this.mutate.bind(this),this.reset=this.reset.bind(this)}setOptions(t){var r;const s=this.options;this.options=e(this,h).defaultMutationOptions(t),q(this.options,s)||e(this,h).getMutationCache().notify({type:"observerOptionsUpdated",mutation:e(this,o),observer:this}),s!=null&&s.mutationKey&&this.options.mutationKey&&R(s.mutationKey)!==R(this.options.mutationKey)?this.reset():((r=e(this,o))==null?void 0:r.state.status)==="pending"&&e(this,o).setOptions(this.options)}onUnsubscribe(){var t;this.hasListeners()||(t=e(this,o))==null||t.removeObserver(this)}onMutationUpdate(t){m(this,u,g).call(this),m(this,u,E).call(this,t)}getCurrentResult(){return e(this,l)}reset(){var t;(t=e(this,o))==null||t.removeObserver(this),p(this,o,void 0),m(this,u,g).call(this),m(this,u,E).call(this)}mutate(t,s){var r;return p(this,n,s),(r=e(this,o))==null||r.removeObserver(this),p(this,o,e(this,h).getMutationCache().build(e(this,h),this.options)),e(this,o).addObserver(this),e(this,o).execute(t)}},h=new WeakMap,l=new WeakMap,o=new WeakMap,n=new WeakMap,u=new WeakSet,g=function(){var s;const t=((s=e(this,o))==null?void 0:s.state)??L();p(this,l,{...t,isPending:t.status==="pending",isSuccess:t.status==="success",isError:t.status==="error",isIdle:t.status==="idle",mutate:this.mutate,reset:this.reset})},E=function(t){U.batch(()=>{var s,r,a,y,c,v,S,x;if(e(this,n)&&this.hasListeners()){const b=e(this,l).variables,O=e(this,l).context,M={client:e(this,h),meta:this.options.meta,mutationKey:this.options.mutationKey};(t==null?void 0:t.type)==="success"?((r=(s=e(this,n)).onSuccess)==null||r.call(s,t.data,b,O,M),(y=(a=e(this,n)).onSettled)==null||y.call(a,t.data,null,b,O,M)):(t==null?void 0:t.type)==="error"&&((v=(c=e(this,n)).onError)==null||v.call(c,t.error,b,O,M),(x=(S=e(this,n)).onSettled)==null||x.call(S,void 0,t.error,b,O,M))}this.listeners.forEach(b=>{b(e(this,l))})})},w);function Q(i,t){const s=T(),[r]=f.useState(()=>new D(s,i));f.useEffect(()=>{r.setOptions(i)},[r,i]);const a=f.useSyncExternalStore(f.useCallback(c=>r.subscribe(U.batchCalls(c)),[r]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),y=f.useCallback((c,v)=>{r.mutate(c,v).catch(j)},[r]);if(a.error&&A(r.options.throwOnError,[a.error]))throw a.error;return{...a,mutate:y,mutateAsync:a.mutate}}export{Q as u};
